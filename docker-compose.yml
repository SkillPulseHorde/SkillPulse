services:
  api-gateway:
    build:
      context: ./ApiGateway
    image: api-gateway:local
    ports:
      - "5000:8080" 
    depends_on:
      - userservice
      - authservice

  userservice:
    build:
      context: ./
      dockerfile: UserService.Api/Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ConnectionStrings__UserDb=Host=users-postgres;Port=5432;Database=users;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    depends_on:
      - users-postgres
      
  authservice:
    build:
      context: ./
      dockerfile: AuthService.Api/Dockerfile
    ports:
      - "5002:8080"
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ACCESS_EXPIRES_HOURS=${JWT_ACCESS_EXPIRES_HOURS}
      - JWT_REFRESH_EXPIRES_HOURS=${JWT_REFRESH_EXPIRES_HOURS}
      - ConnectionStrings__AuthDb=Host=auth-postgres;Port=5432;Database=auth;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    depends_on:
      - auth-postgres
        
  users-postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: users
    ports:
      - "5433:5432"
    volumes:
      - users_pgdata:/var/lib/postgresql/data
        
  auth-postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: auth
    ports:
      - "5434:5432"
    volumes:
      - auth_pgdata:/var/lib/postgresql/data

volumes:
  users_pgdata:
  auth_pgdata: